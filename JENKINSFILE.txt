
pipeline {
    agent any

    stages {
        stage('Get Code') {
            steps {
                echo 'Me voy a traer el codigo'
                //obtener el codigo del repo
                git 'https://github.com/IgnacioOA/helloworld.git'
                sh 'ls -la'
                echo "${WORKSPACE}"
            }
        }
        
        stage('Build') {
            steps {
                echo 'No hay que compilar nada , estoy es python'
            }
        }
        
        stage('Tests'){
            parallel{
        
                stage('Unit') {
                    steps {
                        sh '''
                            export PYTHONPATH=$WORKSPACE
                            pytest --junitxml=result-unit.xml test/unit
                        '''
                     }
                }
                
                stage('Rest') {
                steps {
                    catchError(buildResult: 'UNSTABLE' , stageResult: 'FAILURE') {
                        sh '''
                            export FLASK_APP=app.api:api_application
                            export FLASK_ENV=development
                
                            # Ejecutar flask en segundo plano
                            flask run &
                
                            # Ejecutar wiremock en segundo plano
                            java -jar /Users/nacho/Desktop/Jenkins/wiremock/wiremock-standalone-3.13.0.jar \
                                --port 9090 \
                                --verbose \
                                --root-dir /Users/nacho/Desktop/Jenkins/wiremock &
                
                            # Sleep para que arranquen los servicios, de lo contrario fallaran
                            sleep 5
                
                            export PYTHONPATH=$WORKSPACE
                            pytest --junitxml=result-rest.xml test/rest
                        '''
                        }
                    }
                }
            }
        }
         stage('Results') {
            steps{
                junit '**/result-*.xml'
            }   
         }
        
    }
}
